// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model CurrencyShop {
  ObjectId String @id @default(auto()) @map("_id") @db.ObjectId
  itemId   String @unique
  Item     Item   @relation(fields: [itemId], references: [ObjectId], onDelete: Cascade, onUpdate: Cascade)
  cost     Float
}

model Guild {
  ObjectId  String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @db.Timestamp
  id        String   @unique
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model Item {
  ObjectId     String        @id @default(auto()) @map("_id") @db.ObjectId
  id           String        @unique @default(cuid())
  name         String
  data         Json?
  CurrencyShop CurrencyShop?
  UserItem     UserItem[]
}

model Product {
  ObjectId    String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime   @default(now()) @db.Timestamp
  id          String     @unique @default(cuid())
  name        String
  description String?
  price       Float      @default(0)
  purchaseIds String[]   @db.ObjectId
  purchases   Purchase[] @relation(fields: [purchaseIds], references: [ObjectId])
}

model Purchase {
  ObjectId   String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime  @default(now()) @db.Timestamp
  data       Json?
  userId     String
  User       User      @relation(fields: [userId], references: [id])
  productIds String[]  @db.ObjectId
  products   Product[] @relation(fields: [productIds], references: [ObjectId])
}

model User {
  ObjectId  String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime   @default(now()) @db.Timestamp
  id        String     @unique
  email     String?
  money     Float      @default(0)
  guilds    Guild[]
  purchases Purchase[]
  UserItem  UserItem[]
}

model UserItem {
  ObjectId String @id @default(auto()) @map("_id") @db.ObjectId
  itemId   String @unique
  Item     Item   @relation(fields: [itemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   String
  User     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  amount   Int    @default(0)
}

model WordleInstance {
  ObjectId  String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime       @default(now()) @db.Timestamp
  endedAt   DateTime?      @db.Timestamp
  channelId String
  guildId   String?
  messageId String         @unique
  userId    String
  data      WordleGameData
  players   String[]
  quitters  String[]
  winner    String?
}

type WordleGameData {
  word  String
  board Json
}
