{
  // Place your Konan workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Class event": {
    "body": [
      "const { Event } = require('../structures');",
      "",
      "module.exports = class extends Event {",
      "  constructor(client) {",
      "    super(client, {",
      "      name: '$1',",
      "    });",
      "  }",
      "",
      "  async execute($2) {",
      "    $0",
      "  }",
      "};"
    ],
    "description": "class to event snippet",
    "prefix": "dce",
    "scope": "javascript,typescript"
  },
  "Class button component": {
    "body": [
      "const { ButtonInteraction } = require('../../structures');",
      "",
      "module.exports = class extends ButtonInteraction {",
      "  constructor(client) {",
      "    super(client);",
      "    this.data = {",
      "      name: '$1',",
      "      description: '$2',",
      "    };",
      "  }",
      "",
      "  async execute(interaction = this.ButtonInteraction) {",
      "    $0",
      "  }",
      "};"
    ],
    "description": "class to button component snippet",
    "prefix": "dcbc",
    "scope": "javascript,typescript"
  },
  "Class menu message context": {
    "body": [
      "const { MessageContextMenu } = require('../../structures');",
      "",
      "module.exports = class extends MessageContextMenu {",
      "  constructor(client) {",
      "    super(client);",
      "    this.data = this.setName('$1')",
      "      .setType(3);",
      "  }",
      "",
      "  async execute(interaction = this.MessageContextMenuInteraction) {",
      "    $0",
      "  }",
      "};"
    ],
    "description": "class to menu context snippet",
    "prefix": "dcmcm",
    "scope": "javascript,typescript"
  },
  "Class menu user context": {
    "body": [
      "const { UserContextMenu } = require('../../structures');",
      "",
      "module.exports = class extends UserContextMenu {",
      "  constructor(client) {",
      "    super(client);",
      "    this.data = this.setName('$1')",
      "      .setType(2);",
      "  }",
      "",
      "  async execute(interaction = this.UserContextMenuInteraction) {",
      "    $0",
      "  }",
      "};"
    ],
    "description": "class to menu context snippet",
    "prefix": "dcucm",
    "scope": "javascript,typescript"
  },
  "Class message command": {
    "body": [
      "const { Command } = require('../../structures');",
      "",
      "module.exports = class extends Command {",
      "  constructor(client) {",
      "    super(client, {",
      "      name: '$1',",
      "      description: '$2',",
      "    });",
      "  }",
      "",
      "  async execute(message = this.Message) {",
      "    $0",
      "  }",
      "};"
    ],
    "description": "class to message command snippet",
    "prefix": "dcm",
    "scope": "javascript,typescript"
  },
  "Class select component": {
    "body": [
      "const { SelectMenuInteraction } = require('../../structures');",
      "",
      "module.exports = class extends SelectMenuInteraction {",
      "  constructor(client) {",
      "    super(client);",
      "    this.data = {",
      "      name: '$1',",
      "      description: '$2',",
      "    };",
      "  }",
      "",
      "  async execute(interaction = this.SelectMenuInteraction) {",
      "    $0",
      "  }",
      "};"
    ],
    "description": "class to select component snippet",
    "prefix": "dcsmc",
    "scope": "javascript,typescript"
  },
  "Class slash command": {
    "body": [
      "const { SlashCommand } = require('../../structures');",
      "",
      "module.exports = class extends SlashCommand {",
      "  constructor(client) {",
      "    super(client);",
      "    this.data = this.setName('$1')",
      "      .setDescription('$2')$3;",
      "  }",
      "",
      "  async execute(interaction = this.CommandInteraction) {",
      "    $0",
      "  }",
      "};"
    ],
    "description": "class to slash command snippet",
    "prefix": "dcci",
    "scope": "javascript,typescript"
  }
}
